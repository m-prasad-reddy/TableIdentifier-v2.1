# Logging configuration for the Database Schema Analyzer
# This file defines loggers, handlers, and formatters for the application.
# It supports centralized logging with console and file output, including log rotation.

[loggers]
# List of all loggers used in the application
keys = root, analyzer, interface, query_processor, table_identifier, name_match_manager, nlp_pipeline, patterns, feedback, schema, trainer, connection, config

[handlers]
# List of handlers for log output
keys = console, file

[formatters]
# List of formatters for log message formatting
keys = detailed

# Formatter configuration
[formatter_detailed]
# Format for log messages: timestamp, logger name, level, and message
format = %(asctime)s - %(name)s - %(levelname)s - %(message)s
# Date format for timestamps
datefmt = %Y-%m-%d %H:%M:%S

# Console handler configuration
[handler_console]
# Handler type: StreamHandler for console output
class = StreamHandler
# Log level: INFO and above for console
level = INFO
# Formatter to use
formatter = detailed
# Arguments: Output to stdout
args = (sys.stdout,)

# File handler configuration
[handler_file]
# Handler type: RotatingFileHandler for file output with rotation
class = handlers.RotatingFileHandler
# Log level: DEBUG and above for file
level = DEBUG
# Formatter to use
formatter = detailed
# Arguments: File path, append mode, max size (20MB), 10 backup files
args = ('logs/app.log', 'a', 20971520, 10)

# Root logger configuration
[logger_root]
# Log level: INFO and above
level = INFO
# Handlers: Both console and file
handlers = console, file

# Component-specific loggers
[logger_analyzer]
# Logger for main.py (DatabaseAnalyzer)
level = DEBUG
handlers = console, file
qualname = analyzer
propagate = 0

[logger_interface]
# Logger for interface.py (DatabaseAnalyzerCLI)
level = DEBUG
handlers = console, file
qualname = interface
propagate = 0

[logger_query_processor]
# Logger for query_processor.py (QueryProcessor)
level = DEBUG
handlers = console, file
qualname = query_processor
propagate = 0

[logger_table_identifier]
# Logger for table_identifier.py (TableIdentifier)
level = DEBUG
handlers = console, file
qualname = table_identifier
propagate = 0

[logger_name_match_manager]
# Logger for name_match_manager.py (NameMatchManager)
level = DEBUG
handlers = console, file
qualname = name_match_manager
propagate = 0

[logger_nlp_pipeline]
# Logger for processor.py (NLPPipeline)
level = DEBUG
handlers = console, file
qualname = nlp_pipeline
propagate = 0

[logger_patterns]
# Logger for patterns.py (PatternManager)
level = DEBUG
handlers = console, file
qualname = patterns
propagate = 0

[logger_feedback]
# Logger for feedback_manager.py (FeedbackManager)
level = DEBUG
handlers = console, file
qualname = feedback
propagate = 0

[logger_schema]
# Logger for schema_manager.py (SchemaManager)
level = DEBUG
handlers = console, file
qualname = schema
propagate = 0

[logger_trainer]
# Logger for model_interactor.py (TableIdentificationModel)
level = DEBUG
handlers = console, file
qualname = trainer
propagate = 0

[logger_connection]
# Logger for connection.py (DatabaseConnection)
level = DEBUG
handlers = console, file
qualname = connection
propagate = 0

[logger_config]
# Logger for config_manager.py (DBConfigManager)
level = DEBUG
handlers = console, file
qualname = config
propagate = 0